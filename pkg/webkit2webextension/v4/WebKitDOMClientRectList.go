// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMClientRectList = coreglib.Type(C.webkit_dom_client_rect_list_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMClientRectList, F: marshalDOMClientRectList},
	})
}

// DOMClientRectListOverrides contains methods that are overridable.
type DOMClientRectListOverrides struct {
}

func defaultDOMClientRectListOverrides(v *DOMClientRectList) DOMClientRectListOverrides {
	return DOMClientRectListOverrides{}
}

type DOMClientRectList struct {
	_ [0]func() // equal guard
	DOMObject
}

var (
	_ coreglib.Objector = (*DOMClientRectList)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMClientRectList, *DOMClientRectListClass, DOMClientRectListOverrides](
		GTypeDOMClientRectList,
		initDOMClientRectListClass,
		wrapDOMClientRectList,
		defaultDOMClientRectListOverrides,
	)
}

func initDOMClientRectListClass(gclass unsafe.Pointer, overrides DOMClientRectListOverrides, classInitFunc func(*DOMClientRectListClass)) {
	if classInitFunc != nil {
		class := (*DOMClientRectListClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMClientRectList(obj *coreglib.Object) *DOMClientRectList {
	return &DOMClientRectList{
		DOMObject: DOMObject{
			Object: obj,
		},
	}
}

func marshalDOMClientRectList(p uintptr) (interface{}, error) {
	return wrapDOMClientRectList(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Length returns the number of KitDOMClientRect objects that self contains.
//
// Deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - gulong: #gulong.
//
func (self *DOMClientRectList) Length() uint32 {
	var _arg0 *C.WebKitDOMClientRectList // out
	var _cret C.gulong                   // in

	_arg0 = (*C.WebKitDOMClientRectList)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_client_rect_list_get_length(_arg0)
	runtime.KeepAlive(self)

	var _gulong uint32 // out

	_gulong = uint32(_cret)

	return _gulong
}

// Item returns the KitDOMClientRect object that self contains at index.
//
// Deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - index: #gulong.
//
// The function returns the following values:
//
//   - domClientRect: KitDOMClientRect.
//
func (self *DOMClientRectList) Item(index uint32) *DOMClientRect {
	var _arg0 *C.WebKitDOMClientRectList // out
	var _arg1 C.gulong                   // out
	var _cret *C.WebKitDOMClientRect     // in

	_arg0 = (*C.WebKitDOMClientRectList)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.gulong(index)

	_cret = C.webkit_dom_client_rect_list_item(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(index)

	var _domClientRect *DOMClientRect // out

	_domClientRect = wrapDOMClientRect(coreglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _domClientRect
}

// DOMClientRectListClass: instance of this type is always passed by reference.
type DOMClientRectListClass struct {
	*domClientRectListClass
}

// domClientRectListClass is the struct that's finalized.
type domClientRectListClass struct {
	native *C.WebKitDOMClientRectListClass
}

func (d *DOMClientRectListClass) ParentClass() *DOMObjectClass {
	valptr := &d.native.parent_class
	var _v *DOMObjectClass // out
	_v = (*DOMObjectClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
