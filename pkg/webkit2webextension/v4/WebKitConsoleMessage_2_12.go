// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"fmt"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeConsoleMessageLevel  = coreglib.Type(C.webkit_console_message_level_get_type())
	GTypeConsoleMessageSource = coreglib.Type(C.webkit_console_message_source_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeConsoleMessageLevel, F: marshalConsoleMessageLevel},
		coreglib.TypeMarshaler{T: GTypeConsoleMessageSource, F: marshalConsoleMessageSource},
	})
}

// ConsoleMessageLevel: enum values used to denote the various levels of console
// messages.
//
// Deprecated: since version 2.40.
type ConsoleMessageLevel C.gint

const (
	// ConsoleMessageLevelInfo: information message.
	ConsoleMessageLevelInfo ConsoleMessageLevel = iota
	// ConsoleMessageLevelLog: log message.
	ConsoleMessageLevelLog
	// ConsoleMessageLevelWarning: warning message.
	ConsoleMessageLevelWarning
	// ConsoleMessageLevelError: error message.
	ConsoleMessageLevelError
	// ConsoleMessageLevelDebug: debug message.
	ConsoleMessageLevelDebug
)

func marshalConsoleMessageLevel(p uintptr) (interface{}, error) {
	return ConsoleMessageLevel(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for ConsoleMessageLevel.
func (c ConsoleMessageLevel) String() string {
	switch c {
	case ConsoleMessageLevelInfo:
		return "Info"
	case ConsoleMessageLevelLog:
		return "Log"
	case ConsoleMessageLevelWarning:
		return "Warning"
	case ConsoleMessageLevelError:
		return "Error"
	case ConsoleMessageLevelDebug:
		return "Debug"
	default:
		return fmt.Sprintf("ConsoleMessageLevel(%d)", c)
	}
}

// ConsoleMessageSource: enum values used to denote the various sources of
// console messages.
//
// Deprecated: since version 2.40.
type ConsoleMessageSource C.gint

const (
	// ConsoleMessageSourceJavascript: message produced by JavaScript.
	ConsoleMessageSourceJavascript ConsoleMessageSource = iota
	// ConsoleMessageSourceNetwork: network messages.
	ConsoleMessageSourceNetwork
	// ConsoleMessageSourceConsoleApi messages produced by console API.
	ConsoleMessageSourceConsoleApi
	// ConsoleMessageSourceSecurity: security messages.
	ConsoleMessageSourceSecurity
	// ConsoleMessageSourceOther: other messages.
	ConsoleMessageSourceOther
)

func marshalConsoleMessageSource(p uintptr) (interface{}, error) {
	return ConsoleMessageSource(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for ConsoleMessageSource.
func (c ConsoleMessageSource) String() string {
	switch c {
	case ConsoleMessageSourceJavascript:
		return "Javascript"
	case ConsoleMessageSourceNetwork:
		return "Network"
	case ConsoleMessageSourceConsoleApi:
		return "ConsoleApi"
	case ConsoleMessageSourceSecurity:
		return "Security"
	case ConsoleMessageSourceOther:
		return "Other"
	default:
		return fmt.Sprintf("ConsoleMessageSource(%d)", c)
	}
}
