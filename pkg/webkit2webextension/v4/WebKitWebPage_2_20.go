// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"fmt"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeFormSubmissionStep = coreglib.Type(C.webkit_form_submission_step_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeFormSubmissionStep, F: marshalFormSubmissionStep},
	})
}

// FormSubmissionStep: used to indicate a particular stage in form submission.
// See KitWebPage::will-submit-form.
//
// Deprecated: since version 2.40.
type FormSubmissionStep C.gint

const (
	// FormSubmissionWillSendDomEvent indicates the form's DOM submit event is
	// about to be emitted.
	FormSubmissionWillSendDomEvent FormSubmissionStep = iota
	// FormSubmissionWillComplete indicates the form is about to be submitted.
	FormSubmissionWillComplete
)

func marshalFormSubmissionStep(p uintptr) (interface{}, error) {
	return FormSubmissionStep(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for FormSubmissionStep.
func (f FormSubmissionStep) String() string {
	switch f {
	case FormSubmissionWillSendDomEvent:
		return "SendDomEvent"
	case FormSubmissionWillComplete:
		return "Complete"
	default:
		return fmt.Sprintf("FormSubmissionStep(%d)", f)
	}
}
