// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMHTMLFormElement = coreglib.Type(C.webkit_dom_html_form_element_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMHTMLFormElement, F: marshalDOMHTMLFormElement},
	})
}

// DOMHTMLFormElementOverrides contains methods that are overridable.
type DOMHTMLFormElementOverrides struct {
}

func defaultDOMHTMLFormElementOverrides(v *DOMHTMLFormElement) DOMHTMLFormElementOverrides {
	return DOMHTMLFormElementOverrides{}
}

type DOMHTMLFormElement struct {
	_ [0]func() // equal guard
	DOMHTMLElement
}

var (
	_ coreglib.Objector = (*DOMHTMLFormElement)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMHTMLFormElement, *DOMHTMLFormElementClass, DOMHTMLFormElementOverrides](
		GTypeDOMHTMLFormElement,
		initDOMHTMLFormElementClass,
		wrapDOMHTMLFormElement,
		defaultDOMHTMLFormElementOverrides,
	)
}

func initDOMHTMLFormElementClass(gclass unsafe.Pointer, overrides DOMHTMLFormElementOverrides, classInitFunc func(*DOMHTMLFormElementClass)) {
	if classInitFunc != nil {
		class := (*DOMHTMLFormElementClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMHTMLFormElement(obj *coreglib.Object) *DOMHTMLFormElement {
	return &DOMHTMLFormElement{
		DOMHTMLElement: DOMHTMLElement{
			DOMElement: DOMElement{
				DOMNode: DOMNode{
					DOMObject: DOMObject{
						Object: obj,
					},
					Object: obj,
					DOMEventTarget: DOMEventTarget{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMHTMLFormElement(p uintptr) (interface{}, error) {
	return wrapDOMHTMLFormElement(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// AcceptCharset: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLFormElement) AcceptCharset() string {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret *C.gchar                    // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_accept_charset(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Action: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLFormElement) Action() string {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret *C.gchar                    // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_action(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Elements: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - domhtmlCollection: KitDOMHTMLCollection.
//
func (self *DOMHTMLFormElement) Elements() *DOMHTMLCollection {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret *C.WebKitDOMHTMLCollection  // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_elements(_arg0)
	runtime.KeepAlive(self)

	var _domhtmlCollection *DOMHTMLCollection // out

	_domhtmlCollection = wrapDOMHTMLCollection(coreglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _domhtmlCollection
}

// Encoding: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLFormElement) Encoding() string {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret *C.gchar                    // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_encoding(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Enctype: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLFormElement) Enctype() string {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret *C.gchar                    // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_enctype(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Length: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLFormElement) Length() int32 {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret C.glong                     // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_length(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Method: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLFormElement) Method() string {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret *C.gchar                    // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_method(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Name: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLFormElement) Name() string {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret *C.gchar                    // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_name(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Target: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLFormElement) Target() string {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _cret *C.gchar                    // in

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_form_element_get_target(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Reset: deprecated: Use JavaScriptCore API instead.
func (self *DOMHTMLFormElement) Reset() {
	var _arg0 *C.WebKitDOMHTMLFormElement // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	C.webkit_dom_html_form_element_reset(_arg0)
	runtime.KeepAlive(self)
}

// SetAcceptCharset: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLFormElement) SetAcceptCharset(value string) {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _arg1 *C.gchar                    // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_form_element_set_accept_charset(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetAction: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLFormElement) SetAction(value string) {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _arg1 *C.gchar                    // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_form_element_set_action(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetEncoding: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLFormElement) SetEncoding(value string) {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _arg1 *C.gchar                    // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_form_element_set_encoding(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetEnctype: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLFormElement) SetEnctype(value string) {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _arg1 *C.gchar                    // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_form_element_set_enctype(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetMethod: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLFormElement) SetMethod(value string) {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _arg1 *C.gchar                    // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_form_element_set_method(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetName: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLFormElement) SetName(value string) {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _arg1 *C.gchar                    // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_form_element_set_name(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetTarget: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLFormElement) SetTarget(value string) {
	var _arg0 *C.WebKitDOMHTMLFormElement // out
	var _arg1 *C.gchar                    // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_form_element_set_target(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// Submit: deprecated: Use JavaScriptCore API instead.
func (self *DOMHTMLFormElement) Submit() {
	var _arg0 *C.WebKitDOMHTMLFormElement // out

	_arg0 = (*C.WebKitDOMHTMLFormElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	C.webkit_dom_html_form_element_submit(_arg0)
	runtime.KeepAlive(self)
}

// DOMHTMLFormElementClass: instance of this type is always passed by reference.
type DOMHTMLFormElementClass struct {
	*domhtmlFormElementClass
}

// domhtmlFormElementClass is the struct that's finalized.
type domhtmlFormElementClass struct {
	native *C.WebKitDOMHTMLFormElementClass
}

func (d *DOMHTMLFormElementClass) ParentClass() *DOMHTMLElementClass {
	valptr := &d.native.parent_class
	var _v *DOMHTMLElementClass // out
	_v = (*DOMHTMLElementClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
