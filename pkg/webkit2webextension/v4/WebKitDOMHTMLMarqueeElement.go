// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMHTMLMarqueeElement = coreglib.Type(C.webkit_dom_html_marquee_element_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMHTMLMarqueeElement, F: marshalDOMHTMLMarqueeElement},
	})
}

// DOMHTMLMarqueeElementOverrides contains methods that are overridable.
type DOMHTMLMarqueeElementOverrides struct {
}

func defaultDOMHTMLMarqueeElementOverrides(v *DOMHTMLMarqueeElement) DOMHTMLMarqueeElementOverrides {
	return DOMHTMLMarqueeElementOverrides{}
}

type DOMHTMLMarqueeElement struct {
	_ [0]func() // equal guard
	DOMHTMLElement
}

var (
	_ coreglib.Objector = (*DOMHTMLMarqueeElement)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMHTMLMarqueeElement, *DOMHTMLMarqueeElementClass, DOMHTMLMarqueeElementOverrides](
		GTypeDOMHTMLMarqueeElement,
		initDOMHTMLMarqueeElementClass,
		wrapDOMHTMLMarqueeElement,
		defaultDOMHTMLMarqueeElementOverrides,
	)
}

func initDOMHTMLMarqueeElementClass(gclass unsafe.Pointer, overrides DOMHTMLMarqueeElementOverrides, classInitFunc func(*DOMHTMLMarqueeElementClass)) {
	if classInitFunc != nil {
		class := (*DOMHTMLMarqueeElementClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMHTMLMarqueeElement(obj *coreglib.Object) *DOMHTMLMarqueeElement {
	return &DOMHTMLMarqueeElement{
		DOMHTMLElement: DOMHTMLElement{
			DOMElement: DOMElement{
				DOMNode: DOMNode{
					DOMObject: DOMObject{
						Object: obj,
					},
					Object: obj,
					DOMEventTarget: DOMEventTarget{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMHTMLMarqueeElement(p uintptr) (interface{}, error) {
	return wrapDOMHTMLMarqueeElement(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Start: deprecated: Use JavaScriptCore API instead.
func (self *DOMHTMLMarqueeElement) Start() {
	var _arg0 *C.WebKitDOMHTMLMarqueeElement // out

	_arg0 = (*C.WebKitDOMHTMLMarqueeElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	C.webkit_dom_html_marquee_element_start(_arg0)
	runtime.KeepAlive(self)
}

// Stop: deprecated: Use JavaScriptCore API instead.
func (self *DOMHTMLMarqueeElement) Stop() {
	var _arg0 *C.WebKitDOMHTMLMarqueeElement // out

	_arg0 = (*C.WebKitDOMHTMLMarqueeElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	C.webkit_dom_html_marquee_element_stop(_arg0)
	runtime.KeepAlive(self)
}

// DOMHTMLMarqueeElementClass: instance of this type is always passed by
// reference.
type DOMHTMLMarqueeElementClass struct {
	*domhtmlMarqueeElementClass
}

// domhtmlMarqueeElementClass is the struct that's finalized.
type domhtmlMarqueeElementClass struct {
	native *C.WebKitDOMHTMLMarqueeElementClass
}

func (d *DOMHTMLMarqueeElementClass) ParentClass() *DOMHTMLElementClass {
	valptr := &d.native.parent_class
	var _v *DOMHTMLElementClass // out
	_v = (*DOMHTMLElementClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
