// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gerror"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMCSSStyleDeclaration = coreglib.Type(C.webkit_dom_css_style_declaration_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMCSSStyleDeclaration, F: marshalDOMCSSStyleDeclaration},
	})
}

// DOMCSSStyleDeclarationOverrides contains methods that are overridable.
type DOMCSSStyleDeclarationOverrides struct {
}

func defaultDOMCSSStyleDeclarationOverrides(v *DOMCSSStyleDeclaration) DOMCSSStyleDeclarationOverrides {
	return DOMCSSStyleDeclarationOverrides{}
}

type DOMCSSStyleDeclaration struct {
	_ [0]func() // equal guard
	DOMObject
}

var (
	_ coreglib.Objector = (*DOMCSSStyleDeclaration)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMCSSStyleDeclaration, *DOMCSSStyleDeclarationClass, DOMCSSStyleDeclarationOverrides](
		GTypeDOMCSSStyleDeclaration,
		initDOMCSSStyleDeclarationClass,
		wrapDOMCSSStyleDeclaration,
		defaultDOMCSSStyleDeclarationOverrides,
	)
}

func initDOMCSSStyleDeclarationClass(gclass unsafe.Pointer, overrides DOMCSSStyleDeclarationOverrides, classInitFunc func(*DOMCSSStyleDeclarationClass)) {
	if classInitFunc != nil {
		class := (*DOMCSSStyleDeclarationClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMCSSStyleDeclaration(obj *coreglib.Object) *DOMCSSStyleDeclaration {
	return &DOMCSSStyleDeclaration{
		DOMObject: DOMObject{
			Object: obj,
		},
	}
}

func marshalDOMCSSStyleDeclaration(p uintptr) (interface{}, error) {
	return wrapDOMCSSStyleDeclaration(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// CSSText: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMCSSStyleDeclaration) CSSText() string {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_css_style_declaration_get_css_text(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Length: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - gulong: #gulong.
//
func (self *DOMCSSStyleDeclaration) Length() uint32 {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _cret C.gulong                        // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_css_style_declaration_get_length(_arg0)
	runtime.KeepAlive(self)

	var _gulong uint32 // out

	_gulong = uint32(_cret)

	return _gulong
}

// ParentRule: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - domcssRule: KitDOMCSSRule.
//
func (self *DOMCSSStyleDeclaration) ParentRule() *DOMCSSRule {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _cret *C.WebKitDOMCSSRule             // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_css_style_declaration_get_parent_rule(_arg0)
	runtime.KeepAlive(self)

	var _domcssRule *DOMCSSRule // out

	_domcssRule = wrapDOMCSSRule(coreglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _domcssRule
}

// PropertyPriority: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - propertyName: #gchar.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMCSSStyleDeclaration) PropertyPriority(propertyName string) string {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _arg1 *C.gchar                        // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(propertyName)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.webkit_dom_css_style_declaration_get_property_priority(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(propertyName)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// PropertyShorthand: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - propertyName: #gchar.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMCSSStyleDeclaration) PropertyShorthand(propertyName string) string {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _arg1 *C.gchar                        // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(propertyName)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.webkit_dom_css_style_declaration_get_property_shorthand(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(propertyName)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// PropertyValue: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - propertyName: #gchar.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMCSSStyleDeclaration) PropertyValue(propertyName string) string {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _arg1 *C.gchar                        // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(propertyName)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.webkit_dom_css_style_declaration_get_property_value(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(propertyName)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// IsPropertyImplicit: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - propertyName: #gchar.
//
// The function returns the following values:
//
//   - ok: #gboolean.
//
func (self *DOMCSSStyleDeclaration) IsPropertyImplicit(propertyName string) bool {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _arg1 *C.gchar                        // out
	var _cret C.gboolean                      // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(propertyName)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.webkit_dom_css_style_declaration_is_property_implicit(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(propertyName)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// Item: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - index: #gulong.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMCSSStyleDeclaration) Item(index uint32) string {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _arg1 C.gulong                        // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.gulong(index)

	_cret = C.webkit_dom_css_style_declaration_item(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(index)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// RemoveProperty: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - propertyName: #gchar.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMCSSStyleDeclaration) RemoveProperty(propertyName string) (string, error) {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _arg1 *C.gchar                        // out
	var _cret *C.gchar                        // in
	var _cerr *C.GError                       // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(propertyName)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.webkit_dom_css_style_declaration_remove_property(_arg0, _arg1, &_cerr)
	runtime.KeepAlive(self)
	runtime.KeepAlive(propertyName)

	var _utf8 string // out
	var _goerr error // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))
	if _cerr != nil {
		_goerr = gerror.Take(unsafe.Pointer(_cerr))
	}

	return _utf8, _goerr
}

// SetCSSText: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMCSSStyleDeclaration) SetCSSText(value string) error {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _arg1 *C.gchar                        // out
	var _cerr *C.GError                       // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_css_style_declaration_set_css_text(_arg0, _arg1, &_cerr)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)

	var _goerr error // out

	if _cerr != nil {
		_goerr = gerror.Take(unsafe.Pointer(_cerr))
	}

	return _goerr
}

// SetProperty: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - propertyName: #gchar.
//   - value: #gchar.
//   - priority: #gchar.
//
func (self *DOMCSSStyleDeclaration) SetProperty(propertyName, value, priority string) error {
	var _arg0 *C.WebKitDOMCSSStyleDeclaration // out
	var _arg1 *C.gchar                        // out
	var _arg2 *C.gchar                        // out
	var _arg3 *C.gchar                        // out
	var _cerr *C.GError                       // in

	_arg0 = (*C.WebKitDOMCSSStyleDeclaration)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(propertyName)))
	defer C.free(unsafe.Pointer(_arg1))
	_arg2 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg2))
	_arg3 = (*C.gchar)(unsafe.Pointer(C.CString(priority)))
	defer C.free(unsafe.Pointer(_arg3))

	C.webkit_dom_css_style_declaration_set_property(_arg0, _arg1, _arg2, _arg3, &_cerr)
	runtime.KeepAlive(self)
	runtime.KeepAlive(propertyName)
	runtime.KeepAlive(value)
	runtime.KeepAlive(priority)

	var _goerr error // out

	if _cerr != nil {
		_goerr = gerror.Take(unsafe.Pointer(_cerr))
	}

	return _goerr
}

// DOMCSSStyleDeclarationClass: instance of this type is always passed by
// reference.
type DOMCSSStyleDeclarationClass struct {
	*domcssStyleDeclarationClass
}

// domcssStyleDeclarationClass is the struct that's finalized.
type domcssStyleDeclarationClass struct {
	native *C.WebKitDOMCSSStyleDeclarationClass
}

func (d *DOMCSSStyleDeclarationClass) ParentClass() *DOMObjectClass {
	valptr := &d.native.parent_class
	var _v *DOMObjectClass // out
	_v = (*DOMObjectClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
