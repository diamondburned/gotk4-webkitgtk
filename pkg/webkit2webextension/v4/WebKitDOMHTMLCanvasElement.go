// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMHTMLCanvasElement = coreglib.Type(C.webkit_dom_html_canvas_element_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMHTMLCanvasElement, F: marshalDOMHTMLCanvasElement},
	})
}

// DOMHTMLCanvasElementOverrides contains methods that are overridable.
type DOMHTMLCanvasElementOverrides struct {
}

func defaultDOMHTMLCanvasElementOverrides(v *DOMHTMLCanvasElement) DOMHTMLCanvasElementOverrides {
	return DOMHTMLCanvasElementOverrides{}
}

type DOMHTMLCanvasElement struct {
	_ [0]func() // equal guard
	DOMHTMLElement
}

var (
	_ coreglib.Objector = (*DOMHTMLCanvasElement)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMHTMLCanvasElement, *DOMHTMLCanvasElementClass, DOMHTMLCanvasElementOverrides](
		GTypeDOMHTMLCanvasElement,
		initDOMHTMLCanvasElementClass,
		wrapDOMHTMLCanvasElement,
		defaultDOMHTMLCanvasElementOverrides,
	)
}

func initDOMHTMLCanvasElementClass(gclass unsafe.Pointer, overrides DOMHTMLCanvasElementOverrides, classInitFunc func(*DOMHTMLCanvasElementClass)) {
	if classInitFunc != nil {
		class := (*DOMHTMLCanvasElementClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMHTMLCanvasElement(obj *coreglib.Object) *DOMHTMLCanvasElement {
	return &DOMHTMLCanvasElement{
		DOMHTMLElement: DOMHTMLElement{
			DOMElement: DOMElement{
				DOMNode: DOMNode{
					DOMObject: DOMObject{
						Object: obj,
					},
					Object: obj,
					DOMEventTarget: DOMEventTarget{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMHTMLCanvasElement(p uintptr) (interface{}, error) {
	return wrapDOMHTMLCanvasElement(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Height: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLCanvasElement) Height() int32 {
	var _arg0 *C.WebKitDOMHTMLCanvasElement // out
	var _cret C.glong                       // in

	_arg0 = (*C.WebKitDOMHTMLCanvasElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_canvas_element_get_height(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Width: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLCanvasElement) Width() int32 {
	var _arg0 *C.WebKitDOMHTMLCanvasElement // out
	var _cret C.glong                       // in

	_arg0 = (*C.WebKitDOMHTMLCanvasElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_canvas_element_get_width(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// SetHeight: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLCanvasElement) SetHeight(value int32) {
	var _arg0 *C.WebKitDOMHTMLCanvasElement // out
	var _arg1 C.glong                       // out

	_arg0 = (*C.WebKitDOMHTMLCanvasElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_canvas_element_set_height(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetWidth: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLCanvasElement) SetWidth(value int32) {
	var _arg0 *C.WebKitDOMHTMLCanvasElement // out
	var _arg1 C.glong                       // out

	_arg0 = (*C.WebKitDOMHTMLCanvasElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_canvas_element_set_width(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// DOMHTMLCanvasElementClass: instance of this type is always passed by
// reference.
type DOMHTMLCanvasElementClass struct {
	*domhtmlCanvasElementClass
}

// domhtmlCanvasElementClass is the struct that's finalized.
type domhtmlCanvasElementClass struct {
	native *C.WebKitDOMHTMLCanvasElementClass
}

func (d *DOMHTMLCanvasElementClass) ParentClass() *DOMHTMLElementClass {
	valptr := &d.native.parent_class
	var _v *DOMHTMLElementClass // out
	_v = (*DOMHTMLElementClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
