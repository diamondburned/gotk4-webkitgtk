// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMHTMLEmbedElement = coreglib.Type(C.webkit_dom_html_embed_element_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMHTMLEmbedElement, F: marshalDOMHTMLEmbedElement},
	})
}

// DOMHTMLEmbedElementOverrides contains methods that are overridable.
type DOMHTMLEmbedElementOverrides struct {
}

func defaultDOMHTMLEmbedElementOverrides(v *DOMHTMLEmbedElement) DOMHTMLEmbedElementOverrides {
	return DOMHTMLEmbedElementOverrides{}
}

type DOMHTMLEmbedElement struct {
	_ [0]func() // equal guard
	DOMHTMLElement
}

var (
	_ coreglib.Objector = (*DOMHTMLEmbedElement)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMHTMLEmbedElement, *DOMHTMLEmbedElementClass, DOMHTMLEmbedElementOverrides](
		GTypeDOMHTMLEmbedElement,
		initDOMHTMLEmbedElementClass,
		wrapDOMHTMLEmbedElement,
		defaultDOMHTMLEmbedElementOverrides,
	)
}

func initDOMHTMLEmbedElementClass(gclass unsafe.Pointer, overrides DOMHTMLEmbedElementOverrides, classInitFunc func(*DOMHTMLEmbedElementClass)) {
	if classInitFunc != nil {
		class := (*DOMHTMLEmbedElementClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMHTMLEmbedElement(obj *coreglib.Object) *DOMHTMLEmbedElement {
	return &DOMHTMLEmbedElement{
		DOMHTMLElement: DOMHTMLElement{
			DOMElement: DOMElement{
				DOMNode: DOMNode{
					DOMObject: DOMObject{
						Object: obj,
					},
					Object: obj,
					DOMEventTarget: DOMEventTarget{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMHTMLEmbedElement(p uintptr) (interface{}, error) {
	return wrapDOMHTMLEmbedElement(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Align: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLEmbedElement) Align() string {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_embed_element_get_align(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Height: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLEmbedElement) Height() int32 {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_embed_element_get_height(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Name: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLEmbedElement) Name() string {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_embed_element_get_name(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Src: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLEmbedElement) Src() string {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_embed_element_get_src(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// TypeAttr: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLEmbedElement) TypeAttr() string {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_embed_element_get_type_attr(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Width: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLEmbedElement) Width() int32 {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_embed_element_get_width(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// SetAlign: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLEmbedElement) SetAlign(value string) {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_embed_element_set_align(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetHeight: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLEmbedElement) SetHeight(value int32) {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _arg1 C.glong                      // out

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_embed_element_set_height(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetName: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLEmbedElement) SetName(value string) {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_embed_element_set_name(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetSrc: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLEmbedElement) SetSrc(value string) {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_embed_element_set_src(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetTypeAttr: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLEmbedElement) SetTypeAttr(value string) {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_embed_element_set_type_attr(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetWidth: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLEmbedElement) SetWidth(value int32) {
	var _arg0 *C.WebKitDOMHTMLEmbedElement // out
	var _arg1 C.glong                      // out

	_arg0 = (*C.WebKitDOMHTMLEmbedElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_embed_element_set_width(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// DOMHTMLEmbedElementClass: instance of this type is always passed by
// reference.
type DOMHTMLEmbedElementClass struct {
	*domhtmlEmbedElementClass
}

// domhtmlEmbedElementClass is the struct that's finalized.
type domhtmlEmbedElementClass struct {
	native *C.WebKitDOMHTMLEmbedElementClass
}

func (d *DOMHTMLEmbedElementClass) ParentClass() *DOMHTMLElementClass {
	valptr := &d.native.parent_class
	var _v *DOMHTMLElementClass // out
	_v = (*DOMHTMLElementClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
