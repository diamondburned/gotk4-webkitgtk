// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMBlob = coreglib.Type(C.webkit_dom_blob_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMBlob, F: marshalDOMBlob},
	})
}

// DOMBlobOverrides contains methods that are overridable.
type DOMBlobOverrides struct {
}

func defaultDOMBlobOverrides(v *DOMBlob) DOMBlobOverrides {
	return DOMBlobOverrides{}
}

type DOMBlob struct {
	_ [0]func() // equal guard
	DOMObject
}

var (
	_ coreglib.Objector = (*DOMBlob)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMBlob, *DOMBlobClass, DOMBlobOverrides](
		GTypeDOMBlob,
		initDOMBlobClass,
		wrapDOMBlob,
		defaultDOMBlobOverrides,
	)
}

func initDOMBlobClass(gclass unsafe.Pointer, overrides DOMBlobOverrides, classInitFunc func(*DOMBlobClass)) {
	if classInitFunc != nil {
		class := (*DOMBlobClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMBlob(obj *coreglib.Object) *DOMBlob {
	return &DOMBlob{
		DOMObject: DOMObject{
			Object: obj,
		},
	}
}

func marshalDOMBlob(p uintptr) (interface{}, error) {
	return wrapDOMBlob(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Size: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - guint64: #guint64.
//
func (self *DOMBlob) Size() uint64 {
	var _arg0 *C.WebKitDOMBlob // out
	var _cret C.guint64        // in

	_arg0 = (*C.WebKitDOMBlob)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_blob_get_size(_arg0)
	runtime.KeepAlive(self)

	var _guint64 uint64 // out

	_guint64 = uint64(_cret)

	return _guint64
}

// DOMBlobClass: instance of this type is always passed by reference.
type DOMBlobClass struct {
	*domBlobClass
}

// domBlobClass is the struct that's finalized.
type domBlobClass struct {
	native *C.WebKitDOMBlobClass
}

func (d *DOMBlobClass) ParentClass() *DOMObjectClass {
	valptr := &d.native.parent_class
	var _v *DOMObjectClass // out
	_v = (*DOMObjectClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
