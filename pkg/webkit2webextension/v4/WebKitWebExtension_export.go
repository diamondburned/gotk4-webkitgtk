// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

//export _gotk4_webkit2webextension4_WebExtension_ConnectPageCreated
func _gotk4_webkit2webextension4_WebExtension_ConnectPageCreated(arg0 C.gpointer, arg1 *C.WebKitWebPage, arg2 C.guintptr) {
	var f func(webPage *WebPage)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg2))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(webPage *WebPage))
	}

	var _webPage *WebPage // out

	_webPage = wrapWebPage(coreglib.Take(unsafe.Pointer(arg1)))

	f(_webPage)
}

//export _gotk4_webkit2webextension4_WebExtension_ConnectUserMessageReceived
func _gotk4_webkit2webextension4_WebExtension_ConnectUserMessageReceived(arg0 C.gpointer, arg1 *C.WebKitUserMessage, arg2 C.guintptr) {
	var f func(message *UserMessage)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg2))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(message *UserMessage))
	}

	var _message *UserMessage // out

	_message = wrapUserMessage(coreglib.Take(unsafe.Pointer(arg1)))

	f(_message)
}
