// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMWheelEvent = coreglib.Type(C.webkit_dom_wheel_event_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMWheelEvent, F: marshalDOMWheelEvent},
	})
}

// DOMWheelEventOverrides contains methods that are overridable.
type DOMWheelEventOverrides struct {
}

func defaultDOMWheelEventOverrides(v *DOMWheelEvent) DOMWheelEventOverrides {
	return DOMWheelEventOverrides{}
}

type DOMWheelEvent struct {
	_ [0]func() // equal guard
	DOMMouseEvent
}

var (
	_ coreglib.Objector = (*DOMWheelEvent)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMWheelEvent, *DOMWheelEventClass, DOMWheelEventOverrides](
		GTypeDOMWheelEvent,
		initDOMWheelEventClass,
		wrapDOMWheelEvent,
		defaultDOMWheelEventOverrides,
	)
}

func initDOMWheelEventClass(gclass unsafe.Pointer, overrides DOMWheelEventOverrides, classInitFunc func(*DOMWheelEventClass)) {
	if classInitFunc != nil {
		class := (*DOMWheelEventClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMWheelEvent(obj *coreglib.Object) *DOMWheelEvent {
	return &DOMWheelEvent{
		DOMMouseEvent: DOMMouseEvent{
			DOMUIEvent: DOMUIEvent{
				DOMEvent: DOMEvent{
					DOMObject: DOMObject{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMWheelEvent(p uintptr) (interface{}, error) {
	return wrapDOMWheelEvent(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// WheelDelta: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMWheelEvent) WheelDelta() int32 {
	var _arg0 *C.WebKitDOMWheelEvent // out
	var _cret C.glong                // in

	_arg0 = (*C.WebKitDOMWheelEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_wheel_event_get_wheel_delta(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// WheelDeltaX: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMWheelEvent) WheelDeltaX() int32 {
	var _arg0 *C.WebKitDOMWheelEvent // out
	var _cret C.glong                // in

	_arg0 = (*C.WebKitDOMWheelEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_wheel_event_get_wheel_delta_x(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// WheelDeltaY: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMWheelEvent) WheelDeltaY() int32 {
	var _arg0 *C.WebKitDOMWheelEvent // out
	var _cret C.glong                // in

	_arg0 = (*C.WebKitDOMWheelEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_wheel_event_get_wheel_delta_y(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// InitWheelEvent: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - wheelDeltaX: #glong.
//   - wheelDeltaY: #glong.
//   - view: KitDOMDOMWindow.
//   - screenX: #glong.
//   - screenY: #glong.
//   - clientX: #glong.
//   - clientY: #glong.
//   - ctrlKey: #gboolean.
//   - altKey: #gboolean.
//   - shiftKey: #gboolean.
//   - metaKey: #gboolean.
//
func (self *DOMWheelEvent) InitWheelEvent(wheelDeltaX, wheelDeltaY int32, view *DOMDOMWindow, screenX, screenY, clientX, clientY int32, ctrlKey, altKey, shiftKey, metaKey bool) {
	var _arg0 *C.WebKitDOMWheelEvent // out
	var _arg1 C.glong                // out
	var _arg2 C.glong                // out
	var _arg3 *C.WebKitDOMDOMWindow  // out
	var _arg4 C.glong                // out
	var _arg5 C.glong                // out
	var _arg6 C.glong                // out
	var _arg7 C.glong                // out
	var _arg8 C.gboolean             // out
	var _arg9 C.gboolean             // out
	var _arg10 C.gboolean            // out
	var _arg11 C.gboolean            // out

	_arg0 = (*C.WebKitDOMWheelEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(wheelDeltaX)
	_arg2 = C.glong(wheelDeltaY)
	_arg3 = (*C.WebKitDOMDOMWindow)(unsafe.Pointer(coreglib.InternObject(view).Native()))
	_arg4 = C.glong(screenX)
	_arg5 = C.glong(screenY)
	_arg6 = C.glong(clientX)
	_arg7 = C.glong(clientY)
	if ctrlKey {
		_arg8 = C.TRUE
	}
	if altKey {
		_arg9 = C.TRUE
	}
	if shiftKey {
		_arg10 = C.TRUE
	}
	if metaKey {
		_arg11 = C.TRUE
	}

	C.webkit_dom_wheel_event_init_wheel_event(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6, _arg7, _arg8, _arg9, _arg10, _arg11)
	runtime.KeepAlive(self)
	runtime.KeepAlive(wheelDeltaX)
	runtime.KeepAlive(wheelDeltaY)
	runtime.KeepAlive(view)
	runtime.KeepAlive(screenX)
	runtime.KeepAlive(screenY)
	runtime.KeepAlive(clientX)
	runtime.KeepAlive(clientY)
	runtime.KeepAlive(ctrlKey)
	runtime.KeepAlive(altKey)
	runtime.KeepAlive(shiftKey)
	runtime.KeepAlive(metaKey)
}

// DOMWheelEventClass: instance of this type is always passed by reference.
type DOMWheelEventClass struct {
	*domWheelEventClass
}

// domWheelEventClass is the struct that's finalized.
type domWheelEventClass struct {
	native *C.WebKitDOMWheelEventClass
}

func (d *DOMWheelEventClass) ParentClass() *DOMMouseEventClass {
	valptr := &d.native.parent_class
	var _v *DOMMouseEventClass // out
	_v = (*DOMMouseEventClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
