// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMHTMLOptionsCollection = coreglib.Type(C.webkit_dom_html_options_collection_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMHTMLOptionsCollection, F: marshalDOMHTMLOptionsCollection},
	})
}

// DOMHTMLOptionsCollectionOverrides contains methods that are overridable.
type DOMHTMLOptionsCollectionOverrides struct {
}

func defaultDOMHTMLOptionsCollectionOverrides(v *DOMHTMLOptionsCollection) DOMHTMLOptionsCollectionOverrides {
	return DOMHTMLOptionsCollectionOverrides{}
}

type DOMHTMLOptionsCollection struct {
	_ [0]func() // equal guard
	DOMHTMLCollection
}

var (
	_ coreglib.Objector = (*DOMHTMLOptionsCollection)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMHTMLOptionsCollection, *DOMHTMLOptionsCollectionClass, DOMHTMLOptionsCollectionOverrides](
		GTypeDOMHTMLOptionsCollection,
		initDOMHTMLOptionsCollectionClass,
		wrapDOMHTMLOptionsCollection,
		defaultDOMHTMLOptionsCollectionOverrides,
	)
}

func initDOMHTMLOptionsCollectionClass(gclass unsafe.Pointer, overrides DOMHTMLOptionsCollectionOverrides, classInitFunc func(*DOMHTMLOptionsCollectionClass)) {
	if classInitFunc != nil {
		class := (*DOMHTMLOptionsCollectionClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMHTMLOptionsCollection(obj *coreglib.Object) *DOMHTMLOptionsCollection {
	return &DOMHTMLOptionsCollection{
		DOMHTMLCollection: DOMHTMLCollection{
			DOMObject: DOMObject{
				Object: obj,
			},
		},
	}
}

func marshalDOMHTMLOptionsCollection(p uintptr) (interface{}, error) {
	return wrapDOMHTMLOptionsCollection(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Length: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - gulong: #gulong.
//
func (self *DOMHTMLOptionsCollection) Length() uint32 {
	var _arg0 *C.WebKitDOMHTMLOptionsCollection // out
	var _cret C.gulong                          // in

	_arg0 = (*C.WebKitDOMHTMLOptionsCollection)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_options_collection_get_length(_arg0)
	runtime.KeepAlive(self)

	var _gulong uint32 // out

	_gulong = uint32(_cret)

	return _gulong
}

// SelectedIndex: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLOptionsCollection) SelectedIndex() int32 {
	var _arg0 *C.WebKitDOMHTMLOptionsCollection // out
	var _cret C.glong                           // in

	_arg0 = (*C.WebKitDOMHTMLOptionsCollection)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_options_collection_get_selected_index(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// NamedItem: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - name: #gchar.
//
// The function returns the following values:
//
//   - domNode: KitDOMNode.
//
func (self *DOMHTMLOptionsCollection) NamedItem(name string) *DOMNode {
	var _arg0 *C.WebKitDOMHTMLOptionsCollection // out
	var _arg1 *C.gchar                          // out
	var _cret *C.WebKitDOMNode                  // in

	_arg0 = (*C.WebKitDOMHTMLOptionsCollection)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(name)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.webkit_dom_html_options_collection_named_item(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(name)

	var _domNode *DOMNode // out

	_domNode = wrapDOMNode(coreglib.Take(unsafe.Pointer(_cret)))

	return _domNode
}

// SetSelectedIndex: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLOptionsCollection) SetSelectedIndex(value int32) {
	var _arg0 *C.WebKitDOMHTMLOptionsCollection // out
	var _arg1 C.glong                           // out

	_arg0 = (*C.WebKitDOMHTMLOptionsCollection)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_options_collection_set_selected_index(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// DOMHTMLOptionsCollectionClass: instance of this type is always passed by
// reference.
type DOMHTMLOptionsCollectionClass struct {
	*domhtmlOptionsCollectionClass
}

// domhtmlOptionsCollectionClass is the struct that's finalized.
type domhtmlOptionsCollectionClass struct {
	native *C.WebKitDOMHTMLOptionsCollectionClass
}

func (d *DOMHTMLOptionsCollectionClass) ParentClass() *DOMHTMLCollectionClass {
	valptr := &d.native.parent_class
	var _v *DOMHTMLCollectionClass // out
	_v = (*DOMHTMLCollectionClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
