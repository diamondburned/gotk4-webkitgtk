// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMHTMLTextAreaElement = coreglib.Type(C.webkit_dom_html_text_area_element_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMHTMLTextAreaElement, F: marshalDOMHTMLTextAreaElement},
	})
}

// DOMHTMLTextAreaElementOverrides contains methods that are overridable.
type DOMHTMLTextAreaElementOverrides struct {
}

func defaultDOMHTMLTextAreaElementOverrides(v *DOMHTMLTextAreaElement) DOMHTMLTextAreaElementOverrides {
	return DOMHTMLTextAreaElementOverrides{}
}

type DOMHTMLTextAreaElement struct {
	_ [0]func() // equal guard
	DOMHTMLElement
}

var (
	_ coreglib.Objector = (*DOMHTMLTextAreaElement)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMHTMLTextAreaElement, *DOMHTMLTextAreaElementClass, DOMHTMLTextAreaElementOverrides](
		GTypeDOMHTMLTextAreaElement,
		initDOMHTMLTextAreaElementClass,
		wrapDOMHTMLTextAreaElement,
		defaultDOMHTMLTextAreaElementOverrides,
	)
}

func initDOMHTMLTextAreaElementClass(gclass unsafe.Pointer, overrides DOMHTMLTextAreaElementOverrides, classInitFunc func(*DOMHTMLTextAreaElementClass)) {
	if classInitFunc != nil {
		class := (*DOMHTMLTextAreaElementClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMHTMLTextAreaElement(obj *coreglib.Object) *DOMHTMLTextAreaElement {
	return &DOMHTMLTextAreaElement{
		DOMHTMLElement: DOMHTMLElement{
			DOMElement: DOMElement{
				DOMNode: DOMNode{
					DOMObject: DOMObject{
						Object: obj,
					},
					Object: obj,
					DOMEventTarget: DOMEventTarget{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMHTMLTextAreaElement(p uintptr) (interface{}, error) {
	return wrapDOMHTMLTextAreaElement(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// AreaType: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLTextAreaElement) AreaType() string {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_area_type(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Autofocus: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - ok: #gboolean.
//
func (self *DOMHTMLTextAreaElement) Autofocus() bool {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.gboolean                      // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_autofocus(_arg0)
	runtime.KeepAlive(self)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// Cols: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLTextAreaElement) Cols() int32 {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.glong                         // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_cols(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// DefaultValue: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLTextAreaElement) DefaultValue() string {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_default_value(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Disabled: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - ok: #gboolean.
//
func (self *DOMHTMLTextAreaElement) Disabled() bool {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.gboolean                      // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_disabled(_arg0)
	runtime.KeepAlive(self)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// Form: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - domhtmlFormElement: KitDOMHTMLFormElement.
//
func (self *DOMHTMLTextAreaElement) Form() *DOMHTMLFormElement {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret *C.WebKitDOMHTMLFormElement     // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_form(_arg0)
	runtime.KeepAlive(self)

	var _domhtmlFormElement *DOMHTMLFormElement // out

	_domhtmlFormElement = wrapDOMHTMLFormElement(coreglib.Take(unsafe.Pointer(_cret)))

	return _domhtmlFormElement
}

// Name: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLTextAreaElement) Name() string {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_name(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// ReadOnly: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - ok: #gboolean.
//
func (self *DOMHTMLTextAreaElement) ReadOnly() bool {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.gboolean                      // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_read_only(_arg0)
	runtime.KeepAlive(self)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// Rows: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLTextAreaElement) Rows() int32 {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.glong                         // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_rows(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// SelectionEnd: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLTextAreaElement) SelectionEnd() int32 {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.glong                         // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_selection_end(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// SelectionStart: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLTextAreaElement) SelectionStart() int32 {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.glong                         // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_selection_start(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Value: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLTextAreaElement) Value() string {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret *C.gchar                        // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_value(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// WillValidate: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - ok: #gboolean.
//
func (self *DOMHTMLTextAreaElement) WillValidate() bool {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.gboolean                      // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_text_area_element_get_will_validate(_arg0)
	runtime.KeepAlive(self)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// IsEdited: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - ok: #gboolean.
//
func (input *DOMHTMLTextAreaElement) IsEdited() bool {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _cret C.gboolean                      // in

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(input).Native()))

	_cret = C.webkit_dom_html_text_area_element_is_edited(_arg0)
	runtime.KeepAlive(input)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// Select: deprecated: Use JavaScriptCore API instead.
func (self *DOMHTMLTextAreaElement) Select() {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	C.webkit_dom_html_text_area_element_select(_arg0)
	runtime.KeepAlive(self)
}

// SetAutofocus: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gboolean.
//
func (self *DOMHTMLTextAreaElement) SetAutofocus(value bool) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 C.gboolean                      // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	if value {
		_arg1 = C.TRUE
	}

	C.webkit_dom_html_text_area_element_set_autofocus(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetCols: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLTextAreaElement) SetCols(value int32) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 C.glong                         // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_text_area_element_set_cols(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetDefaultValue: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLTextAreaElement) SetDefaultValue(value string) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 *C.gchar                        // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_text_area_element_set_default_value(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetDisabled: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gboolean.
//
func (self *DOMHTMLTextAreaElement) SetDisabled(value bool) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 C.gboolean                      // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	if value {
		_arg1 = C.TRUE
	}

	C.webkit_dom_html_text_area_element_set_disabled(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetName: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLTextAreaElement) SetName(value string) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 *C.gchar                        // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_text_area_element_set_name(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetReadOnly: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gboolean.
//
func (self *DOMHTMLTextAreaElement) SetReadOnly(value bool) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 C.gboolean                      // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	if value {
		_arg1 = C.TRUE
	}

	C.webkit_dom_html_text_area_element_set_read_only(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetRows: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLTextAreaElement) SetRows(value int32) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 C.glong                         // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_text_area_element_set_rows(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetSelectionEnd: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLTextAreaElement) SetSelectionEnd(value int32) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 C.glong                         // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_text_area_element_set_selection_end(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetSelectionRange: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - start: #glong.
//   - end: #glong.
//   - direction: #gchar.
//
func (self *DOMHTMLTextAreaElement) SetSelectionRange(start, end int32, direction string) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 C.glong                         // out
	var _arg2 C.glong                         // out
	var _arg3 *C.gchar                        // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(start)
	_arg2 = C.glong(end)
	_arg3 = (*C.gchar)(unsafe.Pointer(C.CString(direction)))
	defer C.free(unsafe.Pointer(_arg3))

	C.webkit_dom_html_text_area_element_set_selection_range(_arg0, _arg1, _arg2, _arg3)
	runtime.KeepAlive(self)
	runtime.KeepAlive(start)
	runtime.KeepAlive(end)
	runtime.KeepAlive(direction)
}

// SetSelectionStart: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLTextAreaElement) SetSelectionStart(value int32) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 C.glong                         // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_text_area_element_set_selection_start(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetValue: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLTextAreaElement) SetValue(value string) {
	var _arg0 *C.WebKitDOMHTMLTextAreaElement // out
	var _arg1 *C.gchar                        // out

	_arg0 = (*C.WebKitDOMHTMLTextAreaElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_text_area_element_set_value(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// DOMHTMLTextAreaElementClass: instance of this type is always passed by
// reference.
type DOMHTMLTextAreaElementClass struct {
	*domhtmlTextAreaElementClass
}

// domhtmlTextAreaElementClass is the struct that's finalized.
type domhtmlTextAreaElementClass struct {
	native *C.WebKitDOMHTMLTextAreaElementClass
}

func (d *DOMHTMLTextAreaElementClass) ParentClass() *DOMHTMLElementClass {
	valptr := &d.native.parent_class
	var _v *DOMHTMLElementClass // out
	_v = (*DOMHTMLElementClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
