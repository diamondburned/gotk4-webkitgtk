// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"unsafe"

	"github.com/diamondburned/gotk4-webkitgtk/pkg/javascriptcore/v4"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

//export _gotk4_webkit2webextension4_WebFormManager_ConnectWillSendSubmitEvent
func _gotk4_webkit2webextension4_WebFormManager_ConnectWillSendSubmitEvent(arg0 C.gpointer, arg1 *C.JSCValue, arg2 *C.WebKitFrame, arg3 *C.WebKitFrame, arg4 C.guintptr) {
	var f func(form *javascriptcore.Value, sourceFrame, targetFrame *Frame)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg4))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(form *javascriptcore.Value, sourceFrame, targetFrame *Frame))
	}

	var _form *javascriptcore.Value // out
	var _sourceFrame *Frame         // out
	var _targetFrame *Frame         // out

	{
		obj := coreglib.Take(unsafe.Pointer(arg1))
		_form = &javascriptcore.Value{
			Object: obj,
		}
	}
	_sourceFrame = wrapFrame(coreglib.Take(unsafe.Pointer(arg2)))
	_targetFrame = wrapFrame(coreglib.Take(unsafe.Pointer(arg3)))

	f(_form, _sourceFrame, _targetFrame)
}

//export _gotk4_webkit2webextension4_WebFormManager_ConnectWillSubmitForm
func _gotk4_webkit2webextension4_WebFormManager_ConnectWillSubmitForm(arg0 C.gpointer, arg1 *C.JSCValue, arg2 *C.WebKitFrame, arg3 *C.WebKitFrame, arg4 C.guintptr) {
	var f func(form *javascriptcore.Value, sourceFrame, targetFrame *Frame)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg4))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(form *javascriptcore.Value, sourceFrame, targetFrame *Frame))
	}

	var _form *javascriptcore.Value // out
	var _sourceFrame *Frame         // out
	var _targetFrame *Frame         // out

	{
		obj := coreglib.Take(unsafe.Pointer(arg1))
		_form = &javascriptcore.Value{
			Object: obj,
		}
	}
	_sourceFrame = wrapFrame(coreglib.Take(unsafe.Pointer(arg2)))
	_targetFrame = wrapFrame(coreglib.Take(unsafe.Pointer(arg3)))

	f(_form, _sourceFrame, _targetFrame)
}
