// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMHTMLImageElement = coreglib.Type(C.webkit_dom_html_image_element_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMHTMLImageElement, F: marshalDOMHTMLImageElement},
	})
}

// DOMHTMLImageElementOverrides contains methods that are overridable.
type DOMHTMLImageElementOverrides struct {
}

func defaultDOMHTMLImageElementOverrides(v *DOMHTMLImageElement) DOMHTMLImageElementOverrides {
	return DOMHTMLImageElementOverrides{}
}

type DOMHTMLImageElement struct {
	_ [0]func() // equal guard
	DOMHTMLElement
}

var (
	_ coreglib.Objector = (*DOMHTMLImageElement)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMHTMLImageElement, *DOMHTMLImageElementClass, DOMHTMLImageElementOverrides](
		GTypeDOMHTMLImageElement,
		initDOMHTMLImageElementClass,
		wrapDOMHTMLImageElement,
		defaultDOMHTMLImageElementOverrides,
	)
}

func initDOMHTMLImageElementClass(gclass unsafe.Pointer, overrides DOMHTMLImageElementOverrides, classInitFunc func(*DOMHTMLImageElementClass)) {
	if classInitFunc != nil {
		class := (*DOMHTMLImageElementClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMHTMLImageElement(obj *coreglib.Object) *DOMHTMLImageElement {
	return &DOMHTMLImageElement{
		DOMHTMLElement: DOMHTMLElement{
			DOMElement: DOMElement{
				DOMNode: DOMNode{
					DOMObject: DOMObject{
						Object: obj,
					},
					Object: obj,
					DOMEventTarget: DOMEventTarget{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMHTMLImageElement(p uintptr) (interface{}, error) {
	return wrapDOMHTMLImageElement(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Align: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLImageElement) Align() string {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_align(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Alt: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLImageElement) Alt() string {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_alt(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Border: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLImageElement) Border() string {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_border(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Complete: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - ok: #gboolean.
//
func (self *DOMHTMLImageElement) Complete() bool {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.gboolean                   // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_complete(_arg0)
	runtime.KeepAlive(self)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// Height: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLImageElement) Height() int32 {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_height(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Hspace: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLImageElement) Hspace() int32 {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_hspace(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// IsMap: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - ok: #gboolean.
//
func (self *DOMHTMLImageElement) IsMap() bool {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.gboolean                   // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_is_map(_arg0)
	runtime.KeepAlive(self)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// LongDesc: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLImageElement) LongDesc() string {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_long_desc(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Lowsrc: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLImageElement) Lowsrc() string {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_lowsrc(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Name: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLImageElement) Name() string {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_name(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// NaturalHeight: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLImageElement) NaturalHeight() int32 {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_natural_height(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// NaturalWidth: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLImageElement) NaturalWidth() int32 {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_natural_width(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Src: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLImageElement) Src() string {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_src(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// UseMap: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLImageElement) UseMap() string {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret *C.gchar                     // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_use_map(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Vspace: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLImageElement) Vspace() int32 {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_vspace(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Width: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLImageElement) Width() int32 {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_width(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// X: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLImageElement) X() int32 {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_x(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Y: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMHTMLImageElement) Y() int32 {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _cret C.glong                      // in

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_image_element_get_y(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// SetAlign: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLImageElement) SetAlign(value string) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_image_element_set_align(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetAlt: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLImageElement) SetAlt(value string) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_image_element_set_alt(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetBorder: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLImageElement) SetBorder(value string) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_image_element_set_border(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetHeight: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLImageElement) SetHeight(value int32) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 C.glong                      // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_image_element_set_height(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetHspace: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLImageElement) SetHspace(value int32) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 C.glong                      // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_image_element_set_hspace(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetIsMap: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gboolean.
//
func (self *DOMHTMLImageElement) SetIsMap(value bool) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 C.gboolean                   // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	if value {
		_arg1 = C.TRUE
	}

	C.webkit_dom_html_image_element_set_is_map(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetLongDesc: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLImageElement) SetLongDesc(value string) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_image_element_set_long_desc(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetLowsrc: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLImageElement) SetLowsrc(value string) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_image_element_set_lowsrc(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetName: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLImageElement) SetName(value string) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_image_element_set_name(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetSrc: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLImageElement) SetSrc(value string) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_image_element_set_src(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetUseMap: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLImageElement) SetUseMap(value string) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 *C.gchar                     // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_image_element_set_use_map(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetVspace: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLImageElement) SetVspace(value int32) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 C.glong                      // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_image_element_set_vspace(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetWidth: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #glong.
//
func (self *DOMHTMLImageElement) SetWidth(value int32) {
	var _arg0 *C.WebKitDOMHTMLImageElement // out
	var _arg1 C.glong                      // out

	_arg0 = (*C.WebKitDOMHTMLImageElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = C.glong(value)

	C.webkit_dom_html_image_element_set_width(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// DOMHTMLImageElementClass: instance of this type is always passed by
// reference.
type DOMHTMLImageElementClass struct {
	*domhtmlImageElementClass
}

// domhtmlImageElementClass is the struct that's finalized.
type domhtmlImageElementClass struct {
	native *C.WebKitDOMHTMLImageElementClass
}

func (d *DOMHTMLImageElementClass) ParentClass() *DOMHTMLElementClass {
	valptr := &d.native.parent_class
	var _v *DOMHTMLElementClass // out
	_v = (*DOMHTMLElementClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
