// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMCDATASection = coreglib.Type(C.webkit_dom_cdata_section_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMCDATASection, F: marshalDOMCDATASection},
	})
}

// DOMCDATASectionOverrides contains methods that are overridable.
type DOMCDATASectionOverrides struct {
}

func defaultDOMCDATASectionOverrides(v *DOMCDATASection) DOMCDATASectionOverrides {
	return DOMCDATASectionOverrides{}
}

type DOMCDATASection struct {
	_ [0]func() // equal guard
	DOMText
}

var (
	_ coreglib.Objector = (*DOMCDATASection)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMCDATASection, *DOMCDATASectionClass, DOMCDATASectionOverrides](
		GTypeDOMCDATASection,
		initDOMCDATASectionClass,
		wrapDOMCDATASection,
		defaultDOMCDATASectionOverrides,
	)
}

func initDOMCDATASectionClass(gclass unsafe.Pointer, overrides DOMCDATASectionOverrides, classInitFunc func(*DOMCDATASectionClass)) {
	if classInitFunc != nil {
		class := (*DOMCDATASectionClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMCDATASection(obj *coreglib.Object) *DOMCDATASection {
	return &DOMCDATASection{
		DOMText: DOMText{
			DOMCharacterData: DOMCharacterData{
				DOMNode: DOMNode{
					DOMObject: DOMObject{
						Object: obj,
					},
					Object: obj,
					DOMEventTarget: DOMEventTarget{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMCDATASection(p uintptr) (interface{}, error) {
	return wrapDOMCDATASection(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// DOMCDATASectionClass: instance of this type is always passed by reference.
type DOMCDATASectionClass struct {
	*domcdataSectionClass
}

// domcdataSectionClass is the struct that's finalized.
type domcdataSectionClass struct {
	native *C.WebKitDOMCDATASectionClass
}

func (d *DOMCDATASectionClass) ParentClass() *DOMTextClass {
	valptr := &d.native.parent_class
	var _v *DOMTextClass // out
	_v = (*DOMTextClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
