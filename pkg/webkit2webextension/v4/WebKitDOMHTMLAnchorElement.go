// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMHTMLAnchorElement = coreglib.Type(C.webkit_dom_html_anchor_element_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMHTMLAnchorElement, F: marshalDOMHTMLAnchorElement},
	})
}

// DOMHTMLAnchorElementOverrides contains methods that are overridable.
type DOMHTMLAnchorElementOverrides struct {
}

func defaultDOMHTMLAnchorElementOverrides(v *DOMHTMLAnchorElement) DOMHTMLAnchorElementOverrides {
	return DOMHTMLAnchorElementOverrides{}
}

type DOMHTMLAnchorElement struct {
	_ [0]func() // equal guard
	DOMHTMLElement
}

var (
	_ coreglib.Objector = (*DOMHTMLAnchorElement)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMHTMLAnchorElement, *DOMHTMLAnchorElementClass, DOMHTMLAnchorElementOverrides](
		GTypeDOMHTMLAnchorElement,
		initDOMHTMLAnchorElementClass,
		wrapDOMHTMLAnchorElement,
		defaultDOMHTMLAnchorElementOverrides,
	)
}

func initDOMHTMLAnchorElementClass(gclass unsafe.Pointer, overrides DOMHTMLAnchorElementOverrides, classInitFunc func(*DOMHTMLAnchorElementClass)) {
	if classInitFunc != nil {
		class := (*DOMHTMLAnchorElementClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMHTMLAnchorElement(obj *coreglib.Object) *DOMHTMLAnchorElement {
	return &DOMHTMLAnchorElement{
		DOMHTMLElement: DOMHTMLElement{
			DOMElement: DOMElement{
				DOMNode: DOMNode{
					DOMObject: DOMObject{
						Object: obj,
					},
					Object: obj,
					DOMEventTarget: DOMEventTarget{
						Object: obj,
					},
				},
			},
		},
	}
}

func marshalDOMHTMLAnchorElement(p uintptr) (interface{}, error) {
	return wrapDOMHTMLAnchorElement(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Charset: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Charset() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_charset(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Coords: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Coords() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_coords(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Hash: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Hash() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_hash(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Host: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Host() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_host(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Hostname: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Hostname() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_hostname(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Href: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Href() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_href(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Hreflang: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Hreflang() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_hreflang(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Name: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Name() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_name(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Pathname: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Pathname() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_pathname(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Port: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Port() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_port(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Protocol: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Protocol() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_protocol(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Rel: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Rel() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_rel(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Rev: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Rev() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_rev(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Search: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Search() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_search(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Shape: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Shape() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_shape(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Target: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Target() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_target(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// Text: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) Text() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_text(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// TypeAttr: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - utf8: #gchar.
//
func (self *DOMHTMLAnchorElement) TypeAttr() string {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _cret *C.gchar                      // in

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_html_anchor_element_get_type_attr(_arg0)
	runtime.KeepAlive(self)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}

// SetCharset: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetCharset(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_charset(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetCoords: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetCoords(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_coords(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetHash: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetHash(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_hash(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetHost: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetHost(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_host(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetHostname: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetHostname(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_hostname(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetHref: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetHref(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_href(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetHreflang: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetHreflang(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_hreflang(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetName: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetName(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_name(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetPathname: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetPathname(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_pathname(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetPort: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetPort(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_port(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetProtocol: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetProtocol(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_protocol(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetRel: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetRel(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_rel(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetRev: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetRev(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_rev(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetSearch: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetSearch(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_search(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetShape: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetShape(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_shape(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetTarget: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetTarget(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_target(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetText: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetText(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_text(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// SetTypeAttr: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - value: #gchar.
//
func (self *DOMHTMLAnchorElement) SetTypeAttr(value string) {
	var _arg0 *C.WebKitDOMHTMLAnchorElement // out
	var _arg1 *C.gchar                      // out

	_arg0 = (*C.WebKitDOMHTMLAnchorElement)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(value)))
	defer C.free(unsafe.Pointer(_arg1))

	C.webkit_dom_html_anchor_element_set_type_attr(_arg0, _arg1)
	runtime.KeepAlive(self)
	runtime.KeepAlive(value)
}

// DOMHTMLAnchorElementClass: instance of this type is always passed by
// reference.
type DOMHTMLAnchorElementClass struct {
	*domhtmlAnchorElementClass
}

// domhtmlAnchorElementClass is the struct that's finalized.
type domhtmlAnchorElementClass struct {
	native *C.WebKitDOMHTMLAnchorElementClass
}

func (d *DOMHTMLAnchorElementClass) ParentClass() *DOMHTMLElementClass {
	valptr := &d.native.parent_class
	var _v *DOMHTMLElementClass // out
	_v = (*DOMHTMLElementClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
