// Code generated by girgen. DO NOT EDIT.

package webkit2webextension

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit-web-extension.h>
import "C"

// GType values.
var (
	GTypeDOMUIEvent = coreglib.Type(C.webkit_dom_ui_event_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDOMUIEvent, F: marshalDOMUIEvent},
	})
}

// DOMUIEventOverrides contains methods that are overridable.
type DOMUIEventOverrides struct {
}

func defaultDOMUIEventOverrides(v *DOMUIEvent) DOMUIEventOverrides {
	return DOMUIEventOverrides{}
}

type DOMUIEvent struct {
	_ [0]func() // equal guard
	DOMEvent
}

var (
	_ coreglib.Objector = (*DOMUIEvent)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DOMUIEvent, *DOMUIEventClass, DOMUIEventOverrides](
		GTypeDOMUIEvent,
		initDOMUIEventClass,
		wrapDOMUIEvent,
		defaultDOMUIEventOverrides,
	)
}

func initDOMUIEventClass(gclass unsafe.Pointer, overrides DOMUIEventOverrides, classInitFunc func(*DOMUIEventClass)) {
	if classInitFunc != nil {
		class := (*DOMUIEventClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDOMUIEvent(obj *coreglib.Object) *DOMUIEvent {
	return &DOMUIEvent{
		DOMEvent: DOMEvent{
			DOMObject: DOMObject{
				Object: obj,
			},
		},
	}
}

func marshalDOMUIEvent(p uintptr) (interface{}, error) {
	return wrapDOMUIEvent(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// CharCode: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMUIEvent) CharCode() int32 {
	var _arg0 *C.WebKitDOMUIEvent // out
	var _cret C.glong             // in

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_ui_event_get_char_code(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// Detail: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMUIEvent) Detail() int32 {
	var _arg0 *C.WebKitDOMUIEvent // out
	var _cret C.glong             // in

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_ui_event_get_detail(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// KeyCode: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMUIEvent) KeyCode() int32 {
	var _arg0 *C.WebKitDOMUIEvent // out
	var _cret C.glong             // in

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_ui_event_get_key_code(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// LayerX: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMUIEvent) LayerX() int32 {
	var _arg0 *C.WebKitDOMUIEvent // out
	var _cret C.glong             // in

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_ui_event_get_layer_x(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// LayerY: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMUIEvent) LayerY() int32 {
	var _arg0 *C.WebKitDOMUIEvent // out
	var _cret C.glong             // in

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_ui_event_get_layer_y(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// PageX: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMUIEvent) PageX() int32 {
	var _arg0 *C.WebKitDOMUIEvent // out
	var _cret C.glong             // in

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_ui_event_get_page_x(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// PageY: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - glong: #glong.
//
func (self *DOMUIEvent) PageY() int32 {
	var _arg0 *C.WebKitDOMUIEvent // out
	var _cret C.glong             // in

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_ui_event_get_page_y(_arg0)
	runtime.KeepAlive(self)

	var _glong int32 // out

	_glong = int32(_cret)

	return _glong
}

// View: deprecated: Use JavaScriptCore API instead.
//
// The function returns the following values:
//
//   - domdomWindow: KitDOMDOMWindow.
//
func (self *DOMUIEvent) View() *DOMDOMWindow {
	var _arg0 *C.WebKitDOMUIEvent   // out
	var _cret *C.WebKitDOMDOMWindow // in

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))

	_cret = C.webkit_dom_ui_event_get_view(_arg0)
	runtime.KeepAlive(self)

	var _domdomWindow *DOMDOMWindow // out

	_domdomWindow = wrapDOMDOMWindow(coreglib.AssumeOwnership(unsafe.Pointer(_cret)))

	return _domdomWindow
}

// InitUiEvent: deprecated: Use JavaScriptCore API instead.
//
// The function takes the following parameters:
//
//   - typ: #gchar.
//   - canBubble: #gboolean.
//   - cancelable: #gboolean.
//   - view: KitDOMDOMWindow.
//   - detail: #glong.
//
func (self *DOMUIEvent) InitUiEvent(typ string, canBubble, cancelable bool, view *DOMDOMWindow, detail int32) {
	var _arg0 *C.WebKitDOMUIEvent   // out
	var _arg1 *C.gchar              // out
	var _arg2 C.gboolean            // out
	var _arg3 C.gboolean            // out
	var _arg4 *C.WebKitDOMDOMWindow // out
	var _arg5 C.glong               // out

	_arg0 = (*C.WebKitDOMUIEvent)(unsafe.Pointer(coreglib.InternObject(self).Native()))
	_arg1 = (*C.gchar)(unsafe.Pointer(C.CString(typ)))
	defer C.free(unsafe.Pointer(_arg1))
	if canBubble {
		_arg2 = C.TRUE
	}
	if cancelable {
		_arg3 = C.TRUE
	}
	_arg4 = (*C.WebKitDOMDOMWindow)(unsafe.Pointer(coreglib.InternObject(view).Native()))
	_arg5 = C.glong(detail)

	C.webkit_dom_ui_event_init_ui_event(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5)
	runtime.KeepAlive(self)
	runtime.KeepAlive(typ)
	runtime.KeepAlive(canBubble)
	runtime.KeepAlive(cancelable)
	runtime.KeepAlive(view)
	runtime.KeepAlive(detail)
}

// DOMUIEventClass: instance of this type is always passed by reference.
type DOMUIEventClass struct {
	*domuiEventClass
}

// domuiEventClass is the struct that's finalized.
type domuiEventClass struct {
	native *C.WebKitDOMUIEventClass
}

func (d *DOMUIEventClass) ParentClass() *DOMEventClass {
	valptr := &d.native.parent_class
	var _v *DOMEventClass // out
	_v = (*DOMEventClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
