// Code generated by girgen. DO NOT EDIT.

package webkit

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit/webkit.h>
import "C"

// GType values.
var (
	GTypeFormSubmissionRequest = coreglib.Type(C.webkit_form_submission_request_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeFormSubmissionRequest, F: marshalFormSubmissionRequest},
	})
}

// FormSubmissionRequestOverrides contains methods that are overridable.
type FormSubmissionRequestOverrides struct {
}

func defaultFormSubmissionRequestOverrides(v *FormSubmissionRequest) FormSubmissionRequestOverrides {
	return FormSubmissionRequestOverrides{}
}

// FormSubmissionRequest represents a form submission request.
//
// When a form is about to be submitted in a KitWebView, the
// KitWebView::submit-form signal is emitted. Its request argument
// contains information about the text fields of the form, that are
// typically used to store login information, returned as lists by
// webkit_form_submission_request_list_text_fields(). You can submit the form
// with webkit_form_submission_request_submit().
type FormSubmissionRequest struct {
	_ [0]func() // equal guard
	*coreglib.Object
}

var (
	_ coreglib.Objector = (*FormSubmissionRequest)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*FormSubmissionRequest, *FormSubmissionRequestClass, FormSubmissionRequestOverrides](
		GTypeFormSubmissionRequest,
		initFormSubmissionRequestClass,
		wrapFormSubmissionRequest,
		defaultFormSubmissionRequestOverrides,
	)
}

func initFormSubmissionRequestClass(gclass unsafe.Pointer, overrides FormSubmissionRequestOverrides, classInitFunc func(*FormSubmissionRequestClass)) {
	if classInitFunc != nil {
		class := (*FormSubmissionRequestClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapFormSubmissionRequest(obj *coreglib.Object) *FormSubmissionRequest {
	return &FormSubmissionRequest{
		Object: obj,
	}
}

func marshalFormSubmissionRequest(p uintptr) (interface{}, error) {
	return wrapFormSubmissionRequest(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Submit: continue the form submission.
func (request *FormSubmissionRequest) Submit() {
	var _arg0 *C.WebKitFormSubmissionRequest // out

	_arg0 = (*C.WebKitFormSubmissionRequest)(unsafe.Pointer(coreglib.InternObject(request).Native()))

	C.webkit_form_submission_request_submit(_arg0)
	runtime.KeepAlive(request)
}

// FormSubmissionRequestClass: instance of this type is always passed by
// reference.
type FormSubmissionRequestClass struct {
	*formSubmissionRequestClass
}

// formSubmissionRequestClass is the struct that's finalized.
type formSubmissionRequestClass struct {
	native *C.WebKitFormSubmissionRequestClass
}
