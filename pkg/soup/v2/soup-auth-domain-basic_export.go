// Code generated by girgen. DO NOT EDIT.

package soup

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <libsoup/soup.h>
import "C"

//export _gotk4_soup2_AuthDomainBasicAuthCallback
func _gotk4_soup2_AuthDomainBasicAuthCallback(arg1 *C.SoupAuthDomain, arg2 *C.SoupMessage, arg3 *C.char, arg4 *C.char, arg5 C.gpointer) (cret C.gboolean) {
	var fn AuthDomainBasicAuthCallback
	{
		v := gbox.Get(uintptr(arg5))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(AuthDomainBasicAuthCallback)
	}

	var _domain *AuthDomainBasic // out
	var _msg *Message            // out
	var _username string         // out
	var _password string         // out

	_domain = wrapAuthDomainBasic(coreglib.Take(unsafe.Pointer(arg1)))
	_msg = wrapMessage(coreglib.Take(unsafe.Pointer(arg2)))
	_username = C.GoString((*C.gchar)(unsafe.Pointer(arg3)))
	_password = C.GoString((*C.gchar)(unsafe.Pointer(arg4)))

	ok := fn(_domain, _msg, _username, _password)

	var _ bool

	if ok {
		cret = C.TRUE
	}

	return cret
}
