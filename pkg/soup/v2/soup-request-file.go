// Code generated by girgen. DO NOT EDIT.

package soup

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
	"github.com/diamondburned/gotk4/pkg/gio/v2"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <libsoup/soup.h>
import "C"

// GType values.
var (
	GTypeRequestFile = coreglib.Type(C.soup_request_file_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeRequestFile, F: marshalRequestFile},
	})
}

// RequestFileOverrides contains methods that are overridable.
type RequestFileOverrides struct {
}

func defaultRequestFileOverrides(v *RequestFile) RequestFileOverrides {
	return RequestFileOverrides{}
}

type RequestFile struct {
	_ [0]func() // equal guard
	Request
}

var (
	_ coreglib.Objector = (*RequestFile)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*RequestFile, *RequestFileClass, RequestFileOverrides](
		GTypeRequestFile,
		initRequestFileClass,
		wrapRequestFile,
		defaultRequestFileOverrides,
	)
}

func initRequestFileClass(gclass unsafe.Pointer, overrides RequestFileOverrides, classInitFunc func(*RequestFileClass)) {
	if classInitFunc != nil {
		class := (*RequestFileClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapRequestFile(obj *coreglib.Object) *RequestFile {
	return &RequestFile{
		Request: Request{
			Object: obj,
			Initable: gio.Initable{
				Object: obj,
			},
		},
	}
}

func marshalRequestFile(p uintptr) (interface{}, error) {
	return wrapRequestFile(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// File gets a #GFile corresponding to file's URI.
//
// The function returns the following values:
//
//   - ret corresponding to file.
//
func (file *RequestFile) File() *gio.File {
	var _arg0 *C.SoupRequestFile // out
	var _cret *C.GFile           // in

	_arg0 = (*C.SoupRequestFile)(unsafe.Pointer(coreglib.InternObject(file).Native()))

	_cret = C.soup_request_file_get_file(_arg0)
	runtime.KeepAlive(file)

	var _ret *gio.File // out

	{
		obj := coreglib.AssumeOwnership(unsafe.Pointer(_cret))
		_ret = &gio.File{
			Object: obj,
		}
	}

	return _ret
}

// RequestFileClass: instance of this type is always passed by reference.
type RequestFileClass struct {
	*requestFileClass
}

// requestFileClass is the struct that's finalized.
type requestFileClass struct {
	native *C.SoupRequestFileClass
}

func (r *RequestFileClass) Parent() *RequestClass {
	valptr := &r.native.parent
	var _v *RequestClass // out
	_v = (*RequestClass)(gextras.NewStructNative(unsafe.Pointer(valptr)))
	return _v
}
