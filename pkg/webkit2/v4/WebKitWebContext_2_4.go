// Code generated by girgen. DO NOT EDIT.

package webkit2

import (
	"fmt"
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit2.h>
import "C"

// GType values.
var (
	GTypeProcessModel = coreglib.Type(C.webkit_process_model_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeProcessModel, F: marshalProcessModel},
	})
}

// ProcessModel: enum values used for determining the KitWebContext process
// model.
//
// Deprecated: since version 2.40.
type ProcessModel C.gint

const (
	// ProcessModelSharedSecondaryProcess: deprecated 2.26.
	ProcessModelSharedSecondaryProcess ProcessModel = iota
	// ProcessModelMultipleSecondaryProcesses: use one process for each
	// KitWebView, while still allowing for some of them to share a process in
	// certain situations. The main advantage of this process model is that the
	// rendering process for a web view can crash while the rest of the views
	// keep working normally. This process model is indicated for applications
	// which may use a number of web views and the content of in each must not
	// interfere with the rest â€” for example a full-fledged web browser with
	// support for multiple tabs.
	ProcessModelMultipleSecondaryProcesses
)

func marshalProcessModel(p uintptr) (interface{}, error) {
	return ProcessModel(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for ProcessModel.
func (p ProcessModel) String() string {
	switch p {
	case ProcessModelSharedSecondaryProcess:
		return "SharedSecondaryProcess"
	case ProcessModelMultipleSecondaryProcesses:
		return "MultipleSecondaryProcesses"
	default:
		return fmt.Sprintf("ProcessModel(%d)", p)
	}
}
