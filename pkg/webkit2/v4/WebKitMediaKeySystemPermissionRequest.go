// Code generated by girgen. DO NOT EDIT.

package webkit2

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit2.h>
import "C"

// GType values.
var (
	GTypeMediaKeySystemPermissionRequest = coreglib.Type(C.webkit_media_key_system_permission_request_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeMediaKeySystemPermissionRequest, F: marshalMediaKeySystemPermissionRequest},
	})
}

// MediaKeySystemPermissionRequestOverrides contains methods that are overridable.
type MediaKeySystemPermissionRequestOverrides struct {
}

func defaultMediaKeySystemPermissionRequestOverrides(v *MediaKeySystemPermissionRequest) MediaKeySystemPermissionRequestOverrides {
	return MediaKeySystemPermissionRequestOverrides{}
}

// MediaKeySystemPermissionRequest: permission request for using an EME Content
// Decryption Module.
//
// WebKitMediaKeySystemPermissionRequest represents a request for permission to
// decide whether WebKit should use the given CDM to access protected media when
// requested through the MediaKeySystem API.
//
// When a WebKitMediaKeySystemPermissionRequest is not handled by the user,
// it is denied by default.
//
// When handling this permission request the application may perform additional
// installation of the requested CDM, unless it is already present on the host
// system.
type MediaKeySystemPermissionRequest struct {
	_ [0]func() // equal guard
	*coreglib.Object

	PermissionRequest
}

var (
	_ coreglib.Objector = (*MediaKeySystemPermissionRequest)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*MediaKeySystemPermissionRequest, *MediaKeySystemPermissionRequestClass, MediaKeySystemPermissionRequestOverrides](
		GTypeMediaKeySystemPermissionRequest,
		initMediaKeySystemPermissionRequestClass,
		wrapMediaKeySystemPermissionRequest,
		defaultMediaKeySystemPermissionRequestOverrides,
	)
}

func initMediaKeySystemPermissionRequestClass(gclass unsafe.Pointer, overrides MediaKeySystemPermissionRequestOverrides, classInitFunc func(*MediaKeySystemPermissionRequestClass)) {
	if classInitFunc != nil {
		class := (*MediaKeySystemPermissionRequestClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapMediaKeySystemPermissionRequest(obj *coreglib.Object) *MediaKeySystemPermissionRequest {
	return &MediaKeySystemPermissionRequest{
		Object: obj,
		PermissionRequest: PermissionRequest{
			Object: obj,
		},
	}
}

func marshalMediaKeySystemPermissionRequest(p uintptr) (interface{}, error) {
	return wrapMediaKeySystemPermissionRequest(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// MediaKeySystemPermissionRequestClass: instance of this type is always passed
// by reference.
type MediaKeySystemPermissionRequestClass struct {
	*mediaKeySystemPermissionRequestClass
}

// mediaKeySystemPermissionRequestClass is the struct that's finalized.
type mediaKeySystemPermissionRequestClass struct {
	native *C.WebKitMediaKeySystemPermissionRequestClass
}
