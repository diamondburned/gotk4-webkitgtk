// Code generated by girgen. DO NOT EDIT.

package webkit2

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <glib-object.h>
// #include <webkit2/webkit2.h>
import "C"

// GType values.
var (
	GTypeInstallMissingMediaPluginsPermissionRequest = coreglib.Type(C.webkit_install_missing_media_plugins_permission_request_get_type())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeInstallMissingMediaPluginsPermissionRequest, F: marshalInstallMissingMediaPluginsPermissionRequest},
	})
}

// InstallMissingMediaPluginsPermissionRequestOverrides contains methods that are overridable.
type InstallMissingMediaPluginsPermissionRequestOverrides struct {
}

func defaultInstallMissingMediaPluginsPermissionRequestOverrides(v *InstallMissingMediaPluginsPermissionRequest) InstallMissingMediaPluginsPermissionRequestOverrides {
	return InstallMissingMediaPluginsPermissionRequestOverrides{}
}

// InstallMissingMediaPluginsPermissionRequest: previously, a permission request
// for installing missing media plugins.
//
// WebKitInstallMissingMediaPluginsPermissionRequest will no longer ever be
// created, so you can remove any code that attempts to handle it.
//
// Deprecated: since version 2.40.
type InstallMissingMediaPluginsPermissionRequest struct {
	_ [0]func() // equal guard
	*coreglib.Object

	PermissionRequest
}

var (
	_ coreglib.Objector = (*InstallMissingMediaPluginsPermissionRequest)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*InstallMissingMediaPluginsPermissionRequest, *InstallMissingMediaPluginsPermissionRequestClass, InstallMissingMediaPluginsPermissionRequestOverrides](
		GTypeInstallMissingMediaPluginsPermissionRequest,
		initInstallMissingMediaPluginsPermissionRequestClass,
		wrapInstallMissingMediaPluginsPermissionRequest,
		defaultInstallMissingMediaPluginsPermissionRequestOverrides,
	)
}

func initInstallMissingMediaPluginsPermissionRequestClass(gclass unsafe.Pointer, overrides InstallMissingMediaPluginsPermissionRequestOverrides, classInitFunc func(*InstallMissingMediaPluginsPermissionRequestClass)) {
	if classInitFunc != nil {
		class := (*InstallMissingMediaPluginsPermissionRequestClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapInstallMissingMediaPluginsPermissionRequest(obj *coreglib.Object) *InstallMissingMediaPluginsPermissionRequest {
	return &InstallMissingMediaPluginsPermissionRequest{
		Object: obj,
		PermissionRequest: PermissionRequest{
			Object: obj,
		},
	}
}

func marshalInstallMissingMediaPluginsPermissionRequest(p uintptr) (interface{}, error) {
	return wrapInstallMissingMediaPluginsPermissionRequest(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// Description: this function returns an empty string.
//
// Deprecated: since version 2.40.
//
// The function returns the following values:
//
//   - utf8: empty string.
//
func (request *InstallMissingMediaPluginsPermissionRequest) Description() string {
	var _arg0 *C.WebKitInstallMissingMediaPluginsPermissionRequest // out
	var _cret *C.gchar                                             // in

	_arg0 = (*C.WebKitInstallMissingMediaPluginsPermissionRequest)(unsafe.Pointer(coreglib.InternObject(request).Native()))

	_cret = C.webkit_install_missing_media_plugins_permission_request_get_description(_arg0)
	runtime.KeepAlive(request)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))

	return _utf8
}
