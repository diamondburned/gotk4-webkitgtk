// Code generated by girgen. DO NOT EDIT.

package webkit2

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gerror"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <webkit2/webkit2.h>
import "C"

//export _gotk4_webkit24_PrintOperation_ConnectCreateCustomWidget
func _gotk4_webkit24_PrintOperation_ConnectCreateCustomWidget(arg0 C.gpointer, arg1 C.guintptr) (cret *C.WebKitPrintCustomWidget) {
	var f func() (printCustomWidget *PrintCustomWidget)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func() (printCustomWidget *PrintCustomWidget))
	}

	printCustomWidget := f()

	var _ *PrintCustomWidget

	cret = (*C.WebKitPrintCustomWidget)(unsafe.Pointer(coreglib.InternObject(printCustomWidget).Native()))
	C.g_object_ref(C.gpointer(coreglib.InternObject(printCustomWidget).Native()))

	return cret
}

//export _gotk4_webkit24_PrintOperation_ConnectFailed
func _gotk4_webkit24_PrintOperation_ConnectFailed(arg0 C.gpointer, arg1 *C.GError, arg2 C.guintptr) {
	var f func(err error)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg2))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(err error))
	}

	var _err error // out

	_err = gerror.Take(unsafe.Pointer(arg1))

	f(_err)
}

//export _gotk4_webkit24_PrintOperation_ConnectFinished
func _gotk4_webkit24_PrintOperation_ConnectFinished(arg0 C.gpointer, arg1 C.guintptr) {
	var f func()
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func())
	}

	f()
}
