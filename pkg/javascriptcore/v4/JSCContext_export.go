// Code generated by girgen. DO NOT EDIT.

package javascriptcore

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #include <stdlib.h>
// #include <jsc/jsc.h>
import "C"

//export _gotk4_javascriptcore4_ExceptionHandler
func _gotk4_javascriptcore4_ExceptionHandler(arg1 *C.JSCContext, arg2 *C.JSCException, arg3 C.gpointer) {
	var fn ExceptionHandler
	{
		v := gbox.Get(uintptr(arg3))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(ExceptionHandler)
	}

	var _context *Context     // out
	var _exception *Exception // out

	_context = wrapContext(coreglib.Take(unsafe.Pointer(arg1)))
	_exception = wrapException(coreglib.Take(unsafe.Pointer(arg2)))

	fn(_context, _exception)
}
