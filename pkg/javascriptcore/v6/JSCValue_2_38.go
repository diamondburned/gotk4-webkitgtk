// Code generated by girgen. DO NOT EDIT.

package javascriptcore

import (
	"fmt"
)

// #include <stdlib.h>
// #include <jsc/jsc.h>
import "C"

// TypedArrayType: possible types of the elements contained in a typed array.
type TypedArrayType C.gint

const (
	// TypedArrayNone: not a typed array, or type unsupported.
	TypedArrayNone TypedArrayType = iota
	// TypedArrayInt8: array elements are 8-bit signed integers (int8_t).
	TypedArrayInt8
	// TypedArrayInt16: array elements are 16-bit signed integers (int16_t).
	TypedArrayInt16
	// TypedArrayInt32: array elements are 32-bit signed integers (int32_t).
	TypedArrayInt32
	// TypedArrayInt64: array elements are 64-bit signed integers (int64_t).
	TypedArrayInt64
	// TypedArrayUint8: array elements are 8-bit unsigned integers (uint8_t).
	TypedArrayUint8
	// TypedArrayUint8Clamped: array elements are 8-bit unsigned integers
	// (uint8_t).
	TypedArrayUint8Clamped
	// TypedArrayUint16: array elements are 16-bit unsigned integers (uint16_t).
	TypedArrayUint16
	// TypedArrayUint32: array elements are 32-bit unsigned integers (uint32_t).
	TypedArrayUint32
	// TypedArrayUint64: array elements are 64-bit unsigned integers (uint64_t).
	TypedArrayUint64
	// TypedArrayFloat32: array elements are 32-bit floating point numbers
	// (float).
	TypedArrayFloat32
	// TypedArrayFloat64: array elements are 64-bit floating point numbers
	// (double).
	TypedArrayFloat64
)

// String returns the name in string for TypedArrayType.
func (t TypedArrayType) String() string {
	switch t {
	case TypedArrayNone:
		return "None"
	case TypedArrayInt8:
		return "Int8"
	case TypedArrayInt16:
		return "Int16"
	case TypedArrayInt32:
		return "Int32"
	case TypedArrayInt64:
		return "Int64"
	case TypedArrayUint8:
		return "Uint8"
	case TypedArrayUint8Clamped:
		return "Uint8Clamped"
	case TypedArrayUint16:
		return "Uint16"
	case TypedArrayUint32:
		return "Uint32"
	case TypedArrayUint64:
		return "Uint64"
	case TypedArrayFloat32:
		return "Float32"
	case TypedArrayFloat64:
		return "Float64"
	default:
		return fmt.Sprintf("TypedArrayType(%d)", t)
	}
}
