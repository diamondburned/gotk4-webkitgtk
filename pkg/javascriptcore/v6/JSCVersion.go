// Code generated by girgen. DO NOT EDIT.

package javascriptcore

// #include <stdlib.h>
// #include <jsc/jsc.h>
import "C"

// MAJOR_VERSION: like jsc_get_major_version(), but from the headers used at
// application compile time, rather than from the library linked against at
// application run time.
const MAJOR_VERSION = 2

// MICRO_VERSION: like jsc_get_micro_version(), but from the headers used at
// application compile time, rather than from the library linked against at
// application run time.
const MICRO_VERSION = 4

// MINOR_VERSION: like jsc_get_minor_version(), but from the headers used at
// application compile time, rather than from the library linked against at
// application run time.
const MINOR_VERSION = 42

// GetMajorVersion returns the major version number of the JavaScriptCore
// library. (e.g. in JavaScriptCore version 1.8.3 this is 1.)
//
// This function is in the library, so it represents the JavaScriptCore library
// your code is running against. Contrast with the C_MAJOR_VERSION macro,
// which represents the major version of the JavaScriptCore headers you have
// included when compiling your code.
//
// The function returns the following values:
//
//   - guint: major version number of the JavaScriptCore library.
//
func GetMajorVersion() uint {
	var _cret C.guint // in

	_cret = C.jsc_get_major_version()

	var _guint uint // out

	_guint = uint(_cret)

	return _guint
}

// GetMicroVersion returns the micro version number of the JavaScriptCore
// library. (e.g. in JavaScriptCore version 1.8.3 this is 3.)
//
// This function is in the library, so it represents the JavaScriptCore library
// your code is running against. Contrast with the C_MICRO_VERSION macro,
// which represents the micro version of the JavaScriptCore headers you have
// included when compiling your code.
//
// The function returns the following values:
//
//   - guint: micro version number of the JavaScriptCore library.
//
func GetMicroVersion() uint {
	var _cret C.guint // in

	_cret = C.jsc_get_micro_version()

	var _guint uint // out

	_guint = uint(_cret)

	return _guint
}

// GetMinorVersion returns the minor version number of the JavaScriptCore
// library. (e.g. in JavaScriptCore version 1.8.3 this is 8.)
//
// This function is in the library, so it represents the JavaScriptCore library
// your code is running against. Contrast with the C_MINOR_VERSION macro,
// which represents the minor version of the JavaScriptCore headers you have
// included when compiling your code.
//
// The function returns the following values:
//
//   - guint: minor version number of the JavaScriptCore library.
//
func GetMinorVersion() uint {
	var _cret C.guint // in

	_cret = C.jsc_get_minor_version()

	var _guint uint // out

	_guint = uint(_cret)

	return _guint
}
